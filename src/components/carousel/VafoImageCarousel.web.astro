<vafo-image-carousel {...Astro.props}>
  <div class="vafo-carousel__container">
    <button class="vafo-carousel__prev">Prev</button>
    <div class="vafo-carousel__images">
      <slot />
    </div>
    <button class="vafo-carousel__next">Next</button>
  </div>
</vafo-image-carousel>
<style>
  :host {
    --image-size: 375px;
  }

  .vafo-carousel__container {
    display: block;
    height: var(--image-size);
  }

  .vafo-carousel__images {
    display: flex;
    flex-shrink: 1;
    overflow: scroll;
    height: var(--image-size);
  }
</style>
<script>
  export class VafoImageCarousel extends HTMLElement {
    container: HTMLDivElement;
    scrollOffset: number = 375;

    constructor() {
      super();

      this.container = this.querySelector(".vafo-carousel__container")!;
      console.log(this.container);

      this.container.addEventListener("click", () => {
        console.log("container clicked");
      });

      const images = this.container.querySelector(".vafo-carousel__images")!;
      const prev = this.container.querySelector(".vafo-carousel__prev")!;
      const next = this.container.querySelector(".vafo-carousel__next")!;

      prev.addEventListener("click", () => {
        images.scrollLeft -= this.scrollOffset;
      });

      next.addEventListener("click", () => {
        images.scrollLeft += this.scrollOffset;
      });
    }

    connectedCallback() {
      console.log("VafoImageCarousel connected");
      console.log(this.images);
    }

    static get observedAttributes() {
      return ["images", "index"];
    }

    get images() {
      const imagesAttr = this.getAttribute("images");
      return imagesAttr ? imagesAttr.split(",") : [];
    }
  }

  if (!customElements.get("vafo-image-carousel")) {
    customElements.define("vafo-image-carousel", VafoImageCarousel);
  }
</script>
