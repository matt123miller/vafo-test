---
interface Props {
  theme?: "primary" | "secondary";
  class?: string;
}

const { theme, class: className } = Astro.props;

const themes = {
  primary: "primary",
  secondary: "secondary",
} as const;

let chosenTheme = "primary";
if (theme && typeof theme === "string") {
  chosenTheme = themes[theme] || "primary";
}
---

<button class:list={[`button`, chosenTheme, className]}>
  <slot />
</button>

<style>
  .button {
    padding-inline: var(--spacing-10);
    padding-block: var(--spacing-7);
    border-radius: var(--radius-medium);
    width: 100%;
  }
  .primary {
    color: var(--neutral-0);
    background-color: var(--neutral-1000);
    border: 1px solid var(--neutral-1000);
  }
  .secondary {
    color: var(--text-base);
    background-color: var(--surface-secondary);
    border: 1px solid var(--border-secondary);
  }

  /* TODO: add focus and disabled styles */
  .primary:hover {
    background-color: var(--surface-secondary);
  }
</style>
